# stage 1: base image
FROM python:3.12-slim AS base_image

# Actualizar e instalar dependencias necesarias para compilar psycopg2
RUN apt-get update && apt-get install -y \
    libpq-dev \
    gcc
# Se define una variable opcional
RUN python3 -m venv /opt/venv
# Se sobreescribe la variable path para que tenga prioridad los comandos del ambiente
ENV PATH="/opt/venv/bin:$PATH"
# Se copia unicamente el archivo de dependencias 
COPY requirements.txt /requirements.txt
# Se instalan las dependencias.
RUN pip install --no-cache-dir -r requirements.txt

# stage 2: prod image
FROM python:3.12-slim AS build_image
# instala
RUN apt-get update && apt-get install -y \
    libpq-dev \
    python3-dev \
    gcc \
    && rm -rf /var/lib/apt/lists/*
# Se copia la carpeta venv que contiene todas las dependencias en el segundo contenedor
COPY --from=base_image /opt/venv /opt/venv
# Se copia la aplicación
COPY . /usr/src/app
# Se establece por defecto el directorio 
WORKDIR /usr/src/app
# Se agrega el directorio a las variables de ambiente.
ENV PATH="/opt/venv/bin:$PATH" PYTHONDONTWRITEBYTECODE=1 PYTHONUNBUFFERED=1 
# Expose the Django port
EXPOSE 8181
# Run Django’s development server
CMD ["gunicorn", "--bind", "0.0.0.0:8181", "--workers", "3", "gas-dash.wsgi:application"]


